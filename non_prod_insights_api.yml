---
- name: capture hosts for non_production policy
  hosts: non_production
  gather_facts: yes
  tasks:    
    - name: create non_production policy host list
      template:
        src: templates/non_prod_host_file_template.j2
        dest: files/non_prod_hosts
      delegate_to: localhost
        
    - name: display file content
      set_fact:
        file_contents: "{{ item }}"
      with_file:
        - "files/non_prod_hosts"
      delegate_to: localhost

- name: add host to compliance policies
  hosts: non_production
  vars:
    - ansible_connection: local
    - profile_name: '{{ profile_name }}'
  gather_facts: no

  tasks:
    - name: get access token
      uri:
        url: "https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token"
        method: POST
        return_content: True
        body_format: form-urlencoded
        headers:
          accept: application/json
        body:
          grant_type: refresh_token
          client_id: rhsm-api
          refresh_token: "{{ my_offline_token }}"
        validate_certs: False
      register: access_token_reponse

    - name: print access token
      set_fact:
        token: "{{ access_token_reponse.json.access_token }}"

    - name: Get Compliance List-URI
      uri:
        url: https://console.redhat.com/api/compliance/profiles
        method: GET
        headers:
          Authorization: "Bearer {{ token }}"        
          Content-Type: "application/json"
          accept: application/json
        body_format: form-urlencoded
        status_code: 200
        return_content: yes
        validate_certs: false
        force_basic_auth: yes
      register: profiles
      delegate_to: localhost

    - name: set profile list
      set_fact:
        profile_list: "{{ profiles.json }}"

    - name: profile_id
      set_fact:
        profile_id: "{{ profile_list | json_query(get_profile_id) }}"        
      vars:
        get_profile_id: "data[?attributes.name ==  '{{ profile_name }}'].id"

    - name: Get Host List
      uri:
        url: https://cloud.redhat.com/api/inventory/v1/hosts
        method: GET                                                                                                                                 
        headers:
          Authorization: "Bearer {{ token }}"
          Content-Type: "application/json"
          accept: application/json
        body_format: form-urlencoded
        status_code: 200
        return_content: yes
        validate_certs: false
        force_basic_auth: yes
      register: host_list

    - name: host_data fact
      set_fact:
        host_data: "{{ host_list.json }}"

    - name: print fact
      debug:
        var: host_data

    - name: print ansible_fqdn
      debug:
        msg: '{{ ansible_fqdn }}'

    - name: Copy ansible_fqdn to a file
      copy:
        content: '{{ ansible_fqdn }}'
        dest: files/output.txt

    - name: set file content fact to prod                     
      set_fact:                                             
        file_contents: "{{ item }}"                         
      with_file:                                            
        - "files/non_prod_hosts"                      
      delegate_to: localhost                                

    - name: print file content fact
      debug:
        var: file_contents

    - name: get uuid of host
      set_fact:
        uuid: "{{ uuid + [ host_data | json_query(get_uuid)] }}"
      vars:
        uuid: []
        get_uuid: "results[?fqdn == '{{ item }}'].id"
      loop: "{{ file_contents | split('\n') }}"
      delegate_to: localhost

    - name: print uuid
      debug:
        var: uuid                                                         
    - name: create lookup file
      template:
        src=templates/compliance_host.j2
        dest=compliance_host.json
        mode=0644
      delegate_to: localhost
    
    - name: lookup compliance host
      set_fact:
        json_file: "{{ lookup('file', 'compliance_host.json') }}"
    
    - name: print var
      debug:
        var=json_file

    - name: Update Compliance Host List
      uri:
        url: "https://console.redhat.com/api/compliance/profiles/{{ profile_id[0] }}"
        method: PATCH
        headers:
          Authorization: "Bearer {{ token }}"
          Content-Type: "application/json"
          accept: application/json
        body_format: json
        body: "{{ lookup('file','compliance_host.json') }}"
        status_code: 200
        return_content: yes
        validate_certs: false
        force_basic_auth: yes
      register: new_profile
      ignore_errors: yes