---
- name: capture hosts for production policy
  hosts: all
  gather_facts: yes
  tasks:    
    - name: create production policy host list
      template:
        src: templates/prod_host_file_template.j2
        dest: files/prod_hosts
      delegate_to: localhost
        
    - name: display file content
      set_fact:
        file_contents: "{{ item }}"
      with_file:
        - "files/prod_hosts"
      delegate_to: localhost

- name: add host to compliance policies
  hosts: all
  vars:
    - ansible_connection: local
    - profile_name: '{{ profile_name }}'
  gather_facts: no

  tasks:
    - name: get access token
      uri:
        url: "https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token"
        method: POST
        return_content: True
        body_format: form-urlencoded
        headers:
          accept: application/json
        body:
          grant_type: refresh_token
          client_id: rhsm-api
          refresh_token: "{{ my_offline_token }}"
        validate_certs: False
      register: access_token_reponse

    - name: print access token
      set_fact:
        token: "{{ access_token_reponse.json.access_token }}"

    - name: Include profile looped tasks
      include_tasks: Tests/looped_tasks_profile.yml
      with_sequence: start=1 end=6

    - name: Include host looped tasks
      include_tasks: Tests/looped_tasks.yml
      with_sequence: start=1 end=5

    - name: Print the profile
      debug:
        var: profile_id

    - name: Print the UUID
      debug:
        msg: "{{ uuid }}"

    - name: create lookup file
      template:
        src=templates/compliance_host.j2 
        dest=compliance_host.json
        mode=0644
      delegate_to: localhost

    - name: lookup compliance host
      set_fact:
        json_file: "{{ lookup('file', 'compliance_host.json') }}"

    - name: print var
      debug:
        var=json_file

    - name: Update Compliance Host List
      uri:
        url: "https://console.redhat.com/api/compliance/profiles/{{ profile_id[0] }}"
        method: PATCH
        headers:
          Authorization: "Bearer {{ token }}"
          Content-Type: "application/json"
          accept: application/json
        body_format: json
        body: "{{ lookup('file','compliance_host.json') }}"
        status_code: 200
        return_content: yes
        validate_certs: false
        force_basic_auth: yes
      register: new_profile
      ignore_errors: yes
